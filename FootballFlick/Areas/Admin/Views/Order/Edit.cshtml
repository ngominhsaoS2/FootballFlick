@model Model.EntityFramework.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var orderDetail = (List<Model.ViewModel.OrderDetailViewModel>)ViewBag.OrderDetail;
}

@section jsFooter{
    <script src="/Assets/Admin/js/controller/orderController.js"></script>
    <script src="/Assets/Admin/js/controller/searchController.js"></script>
    <script>
        $(document).ready(function () {
            $("#btnAdd").click(function () {
                $("#addRow").toggle();
            });
        });
    </script>
}

<h2>Edit</h2>
<br/>

@using (Html.BeginForm("Edit", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group form-inline">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <label class="control-label col-md-1">Name</label>
            @Html.TextBoxFor(model => model.ShipName, new { @class = "form-control col-md-3", id = "txtShipName"})
            <label class="control-label col-md-1">Mobile</label>
            @Html.TextBoxFor(model => model.ShipMobile, new { @class = "form-control col-md-3", id = "txtShipMobile" })
            <label class="control-label col-md-1">Address</label>
            @Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control col-md-3", id = "txtShipAddress" })
        </div>
        <div class="form-group form-inline">
            <label class="control-label col-md-1">Email</label>
            @Html.TextBoxFor(model => model.ShipEmail, new { @class = "form-control col-md-3", id = "txtShipEmail" })
            <label class="control-label col-md-1">Status</label>
            @Html.DropDownListFor(model => model.Status, null, new { @class = "form-control col-md-3", id = "txtStatus" })
            <div class="form-inline col-md-3">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}
    
<div class="form-horizontal">
    <div class="form-group">
        <div class="col-md-2">
            <button class="btn btn-primary" id="btnUpdate">Update</button>
            <button type="button" class="btn btn-primary" id="btnAdd">Add</button>
        </div>
    <div class="form-group form-inline" id="addRow" hidden>
        <label class="control-label">ProductID</label>
        <input type="search" class="form-control" id="txtProductID" />
        <label class="control-label">Quantity</label>
        <input type="number" class="form-control" id="txtQuantity"/>
        <label class="control-label">Price</label>
        <input type="number" class="form-control" id="txtPrice" />
        <button type="button" class="btn btn-success" id="btnAddRow">Add row</button>
    </div>
          
    </div>
    <div class="tables">
        <div class="table-responsive bs-example widget-shadow">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>OrderID</th>
                        <th>ProductID</th>
                        <th>ProductCode</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="tableBody">
                    @foreach (var item in orderDetail)
            {
                var buttonId = "button" + item.ProductID;
                        <tr id="@item.ProductID">
                            <td>@item.OrderID</td>
                            <td>@item.ProductID</td>
                            <td>@item.ProductCode</td>
                            <td><input type="number" class="txtQuantity" data-id="@item.ProductID" value="@item.Quantity" /></td>
                            <td>@item.Price.GetValueOrDefault(0).ToString("N0")</td>
                            <td>
                                @Ajax.ActionLink("Delete", "Delete", new { @orderId = @item.OrderID, @productId = @item.ProductID }, new AjaxOptions
                           {
                               Confirm = "Do you really want to delete this row?",
                               OnComplete = "$('#" + @item.ProductID + "').remove()",
                               HttpMethod = "Delete"
                           })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>