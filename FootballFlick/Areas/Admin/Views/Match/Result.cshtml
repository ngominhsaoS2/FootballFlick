@model Model.ViewModel.MatchViewModel

@{
    ViewBag.Title = "Result";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section jsFooter {
    <script src="/Assets/Admin/js/controller/searchController.js"></script>
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/Admin/js/plugins/ckeditor/config.js',
        });
    </script>
}

<h1>Result match: @Model.Code</h1>
</br>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
</br>

@using (Html.BeginForm("Result", "Match", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.MetaTitle, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Image, new { @class = "form-control", id = "txtImage", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1">
                <a id="btnSelectImage" href="#">Select</a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomeClubID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.TextBoxFor(model => model.HomeClubID, new { @class = "form-control col-md-1", type = "search", name = "keyword", id = "txtHomeClubID", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.HomeClubID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.HomeClubCode, new { @class = "form-control col-md-1", id = "txtHomeClubCode", placeholder = "code", @readonly = "readonly" })
            </div>
            @Html.LabelFor(model => model.HomeClubGoal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.HomeClubGoal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomeClubGoal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VisitingClubID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.TextBoxFor(model => model.VisitingClubID, new { @class = "form-control col-md-1", type = "search", name = "keyword", id = "txtVisitingClubID", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.VisitingClubID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.VisitingClubCode, new { @class = "form-control col-md-1", id = "txtVisitingClubCode", placeholder = "code", @readonly = "readonly" })
            </div>
            @Html.LabelFor(model => model.VisitingClubGoal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.VisitingClubGoal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VisitingClubGoal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StadiumID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.TextBoxFor(model => model.StadiumID, new { @class = "form-control col-md-1", type = "search", name = "keyword", id = "txtStadiumID", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.StadiumID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.StadiumCode, new { @class = "form-control col-md-1", id = "txtStadiumCode", placeholder = "code", @readonly = "readonly" })
            </div>
            @Html.LabelFor(model => model.HoldAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.HoldAddress, new { @class = "form-control", id = "txtHoldAddress", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.HoldAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Date, new { @class = "form-control", type = "datetime", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ExpiredDateToSign, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ExpiredDateToSign, new { @class = "form-control", type = "datetime", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ExpiredDateToSign, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ExpectedStartTime, new { @class = "form-control", type = "time", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ExpectedStartTime, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.RealStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.RealStartTime, new { @class = "form-control", type = "time" })
                @Html.ValidationMessageFor(model => model.RealStartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.ExpectedEndTime, new { @class = "form-control", type = "time", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ExpectedEndTime, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.RealEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.RealEndTime, new { @class = "form-control", type = "time" })
                @Html.ValidationMessageFor(model => model.RealEndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", type = "number", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.PromotionPrice, new { @class = "form-control", type = "number", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MetaDescriptions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent" })
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.Status, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-3">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}