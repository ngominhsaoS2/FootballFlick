@using PagedList.Mvc
@model PagedList.IPagedList<Model.EntityFramework.User>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section jsFooter{
    <script>
    function sortTable(n) {
      var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
      table = document.getElementById("userTable");
      switching = true;
      //Set the sorting direction to ascending:
      dir = "asc";
      /*Make a loop that will continue until
      no switching has been done:*/
      while (switching) {
        //start by saying: no switching is done:
        switching = false;
        rows = table.getElementsByTagName("TR");
        /*Loop through all table rows (except the
        first, which contains table headers):*/
        for (i = 1; i < (rows.length - 1); i++) {
          //start by saying there should be no switching:
          shouldSwitch = false;
          /*Get the two elements you want to compare,
          one from current row and one from the next:*/
          x = rows[i].getElementsByTagName("TD")[n];
          y = rows[i + 1].getElementsByTagName("TD")[n];
          /*check if the two rows should switch place,
          based on the direction, asc or desc:*/
          if (dir == "asc") {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
              //if so, mark as a switch and break the loop:
              shouldSwitch= true;
              break;
            }
          } else if (dir == "desc") {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
              //if so, mark as a switch and break the loop:
              shouldSwitch= true;
              break;
            }
          }
        }
        if (shouldSwitch) {
          /*If a switch has been marked, make the switch
          and mark that a switch has been done:*/
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
          //Each time a switch is done, increase this count by 1:
          switchcount ++;
        } else {
          /*If no switching has been done AND the direction is "asc",
          set the direction to "desc" and run the while loop again.*/
          if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
          }
        }
      }
    }
    </script>    
}

<div class="tables">
    @using (Html.BeginForm("Index", "User", FormMethod.Get))
    {
        <div class="row form-group">
            <div class="col-lg-12">
                <div class="col-md-4">
                    <h1 class="title1">List of Users</h1>
                </div>
                <div class="col-md-3">
                    <input type="text" value="@ViewBag.SearchString" class="form-control" name="searchString" />
                </div>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-success">Search</button>
                    <a type="submit" class="btn btn-success" href="/Admin/User/Index">Clear</a>
                    <a type="submit" class="btn btn-primary" href="/Admin/User/Create">Create</a>
                </div>
                <div class="col-md-1">
                    <select class="form-control" name="">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                    </select>
                </div>
            </div>
        </div>
    }

    <div class="table-responsive bs-example widget-shadow">
        <table id="userTable" class="table table-bordered">
            <thead>
                <tr>
                    <th onclick="sortTable(0)">UserName</th>
                    <th onclick="sortTable(1)">Name</th> 
                    <th onclick="sortTable(2)">Address</th> 
                    <th onclick="sortTable(3)">Email</th> 
                    <th onclick="sortTable(4)">Phone</th> 
                    <th onclick="sortTable(5)">Status</th>
                    <th>Action</th> 
                </tr>
            </thead> 
            <tbody> 
                @foreach (var item in Model)
                {
                    <tr id="row_@item.ID">
                        <td>@item.UserName</td>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@item.Email</td>
                        <td>@item.Phone</td>
                        <td>@(item.Status? "Active" : "Not available")</td>
                        <td>
                            <a href="/Admin/User/Edit/@item.ID">Edit</a>
                            |
                            @Ajax.ActionLink("Delete", "Delete", new { @id = @item.ID }, new AjaxOptions
                       {
                           Confirm = "Do you really want to delete this row?",
                           OnComplete = "$('#row_" + @item.ID + "').remove()",
                           HttpMethod = "Delete"
                       })
                        </td>
                    </tr>
                }
                  
            </tbody> 
        </table>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, @searchString = @ViewBag.SearchString }))
    </div>
</div>